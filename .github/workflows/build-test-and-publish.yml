name: Build Test And Publish Docker Image
on:
  push:
    branches: [master]

jobs:
  build-test-publish:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: ghcr.io
      DOCKER_IMAGE: pixel-yml/mikula.dev
      DOCKER_TARGET_PLATFORM: linux/arm/v7
    steps:

    - name: Checkout the code
      uses: actions/checkout@v1

    - name: HTML5 Validator
      uses: Cyb3r-Jak3/html5validator-action@v7.0.0
      with:
        log_level: WARNING
        root: web-content/
        format: json
        css: true

    - name: Upload HTML Validator Logs
      uses: actions/upload-artifact@v2
      with:
        name: html_validator_log
        path: log.log

    - name: Link Checker
      id: lychee
      uses: lycheeverse/lychee-action@v1.2.1
      with:
        fail: false
      env:
        LYCHEE_OUT: /tmp/lychee/out.md

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v3
      with:
        buildx-version: latest
        qemu-version: latest

    - name: Login to GHCR
      if: success()
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Prepare Buildx
      if: success()
      id: prepare
      run: |
        echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}
        echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}
        echo ::set-output name=version::master
        echo ::set-output name=number::${GITHUB_RUN_NUMBER}

    - name: Run Buildx (Build And Push)
      if: success()
      run: |
        docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platform }} \
          --output "type=image,push=true" \
          --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
          --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.number }} \
          --file ./Dockerfile .

    - name: Run Snyk to check Docker image for vulnerabilities [monitor]
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: monitor
        image: "ghcr.io/pixel-yml/mikula.dev:master"
        args: --file=Dockerfile --project-name=mikula.dev

    - name: Run Snyk to check Docker image for vulnerabilities [test]
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test
        image: "ghcr.io/pixel-yml/mikula.dev:master"
        args: --file=Dockerfile --project-name=mikula.dev

    - name: Upload Snyk Result To GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: snyk.sarif

    - name: Trigger Jenkis Job
      run: curl ${{ secrets.JENKINS_BUILD_TRIGGER_URL }}