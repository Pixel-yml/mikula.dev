name: Build Test And Publish Docker Image
on:
  push:
    branches: [master]
jobs:   
  build:    
    runs-on: ubuntu-18.04    
    env:      
      DOCKER_REGISTRY: ghcr.io      
      DOCKER_IMAGE: pixel-yml/mikula.dev       
      DOCKER_TARGET_PLATFORM: linux/arm/v7                 
    steps:    

    - name: Checkout the code       
      uses: actions/checkout@v1    

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx      
      uses: crazy-max/ghaction-docker-buildx@v3      
      with:
        buildx-version: latest
        qemu-version: latest 

    - name: Login to GHCR
      if: success()
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Prepare      
      if: success()      
      id: prepare      
      run: |        
        echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
        echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
        echo ::set-output name=version::master

    - name: Run Buildx
      if: success()
      run: |
        docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platform }} \
          --output "type=image,push=true" \
          --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
          --file ./Dockerfile .

    - name: Run Snyk to check Docker image for vulnerabilities [monitor]
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: monitor
        image: "ghcr.io/pixel-yml/mikula.dev:master"
        args: --file=Dockerfile --project-name=mikula.dev
        
    - name: Run Snyk to check Docker image for vulnerabilities [test]
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test
        image: "ghcr.io/pixel-yml/mikula.dev:master"
        args: --file=Dockerfile --project-name=mikula.dev
        
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: snyk.sarif
